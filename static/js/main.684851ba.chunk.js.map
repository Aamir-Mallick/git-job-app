{"version":3,"sources":["useFetchJob.js","Job.js","JobPagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","source","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","JobPagination","page","setPage","adjustPage","amount","prePage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","useReducer","dispatch","useEffect","cancleToken1","axios","CancelToken","get","cancleToken","token","markdown","then","res","data","catch","e","isCancel","cancleToken2","length","cancel","useFetchJob","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAGMA,EACU,eADVA,EAEM,WAFNA,EAGG,QAHHA,EAIkB,uBAKxB,SAASC,EAAQC,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKJ,EACH,MAAO,CAAEK,SAAS,EAAMC,KAAM,IAChC,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBG,SAAS,EAAOC,KAAMH,EAAOI,QAAQD,OAE1D,KAAKN,EACH,OAAO,2BACFE,GADL,IAEEG,SAAS,EACTG,MAAOL,EAAOI,QAAQC,MACtBF,KAAM,KAGV,KAAKN,EACH,OAAO,2BAAKE,GAAZ,IAAmBO,YAAaN,EAAOI,QAAQE,cAEjD,QACE,OAAOP,G,kEC3BE,SAASQ,EAAT,GAAuB,IAARC,EAAO,EAAPA,IAAO,EACXC,oBAAS,GADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAEnC,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,QACd,kBAACD,EAAA,EAAKE,KAAN,KACE,yBAAKD,UAAU,kCACb,6BACE,kBAACD,EAAA,EAAKG,MAAN,KACGP,EAAIQ,MADP,KAEE,0BAAMH,UAAU,gCACbL,EAAIS,UAGT,kBAACL,EAAA,EAAKM,SAAN,CAAeL,UAAU,mBACtB,IAAIM,KAAKX,EAAIY,YAAYC,sBAE5B,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAaf,EAAIP,MAChC,kBAACqB,EAAA,EAAD,CAAOC,QAAQ,aAAaf,EAAIgB,UAChC,yBAAKC,MAAO,CAAEC,UAAW,cACvB,kBAAC,IAAD,CAAeC,OAAQnB,EAAIoB,iBAG/B,yBACEf,UAAU,oBACVgB,OAAO,KACPC,IAAKtB,EAAIS,QACTc,IAAKvB,EAAIwB,gBAGb,kBAACpB,EAAA,EAAKqB,KAAN,KACE,kBAACC,EAAA,EAAD,CACEC,QAAS,kBAAMxB,GAAQ,SAACyB,GAAD,OAAeA,MACtCb,QAAQ,WAEPb,EAAO,eAAiB,iBAG7B,kBAAC2B,EAAA,EAAD,CAAUC,GAAI5B,GACZ,yBAAKG,UAAU,QACb,kBAAC,IAAD,CAAec,OAAQnB,EAAI+B,kB,aCxCxB,SAASC,EAAT,GAAwD,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASpC,EAAe,EAAfA,YAC/CqC,EAAa,SAACC,GAClBF,GAAQ,SAACG,GACP,OAAOA,EAAUD,MAIrB,OACE,kBAACE,EAAA,EAAD,KACY,IAATL,GAAc,kBAACK,EAAA,EAAWC,KAAZ,CAAiBZ,QAAS,kBAAMQ,GAAY,MACjD,IAATF,GACC,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMO,EAAQ,KAAxC,KAEDD,EAAO,GAAK,kBAACK,EAAA,EAAWG,SAAZ,MACZR,EAAO,GACN,kBAACK,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,GAAY,KACzCF,EAAO,GAIZ,kBAACK,EAAA,EAAWE,KAAZ,CAAiBE,QAAM,GAAET,GACxBnC,GACC,kBAACwC,EAAA,EAAWE,KAAZ,CAAiBb,QAAS,kBAAMQ,EAAW,KACxCF,EAAO,GAGXnC,GAAe,kBAACwC,EAAA,EAAWK,KAAZ,CAAiBhB,QAAS,kBAAMQ,EAAW,O,qBC1BlD,SAASS,EAAT,GAAgD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAC3C,OACE,kBAACC,EAAA,EAAD,CAAM1C,UAAU,QACd,kBAAC0C,EAAA,EAAKC,IAAN,CAAU3C,UAAU,mBAClB,kBAAC0C,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,oBACA,kBAACL,EAAA,EAAKM,QAAN,CACEC,SAAUR,EACVS,MAAOV,EAAOd,YACdyB,KAAK,cACL/D,KAAK,UAGT,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,KACd,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CACEC,SAAUR,EACVS,MAAOV,EAAO7B,SACdwC,KAAK,WACL/D,KAAK,UAGT,kBAACsD,EAAA,EAAKE,MAAN,CAAYC,GAAIC,IAAKM,GAAG,OAAOpD,UAAU,QACvC,kBAAC0C,EAAA,EAAKW,MAAN,CACEJ,SAAUR,EACVS,MAAOV,EAAOc,UACdH,KAAK,YACLI,GAAG,YACHC,MAAM,iBACNpE,KAAK,WACLY,UAAU,YCIPyD,MA9Bf,WAAgB,IAAD,EACe7D,mBAAS,IADxB,mBACN4C,EADM,KACEkB,EADF,OAEW9D,mBAAS,GAFpB,mBAENgC,EAFM,KAEAC,EAFA,OJ4BA,SAAqBW,EAAQZ,GAAO,IAAD,EACtB+B,qBAAW1E,EAAS,CAAEK,KAAM,GAAID,SAAS,IADnB,mBACzCH,EADyC,KAClC0E,EADkC,KA2ChD,OAxCAC,qBAAU,WACR,IAAMC,EAAeC,IAAMC,YAAYlD,SACvC8C,EAAS,CAAExE,KAAMJ,IAEjB+E,IACGE,IAjCU,kBAiCI,CACbC,YAAaJ,EAAaK,MAC1B3B,OAAO,aAAG4B,UAAU,EAAMxC,KAAMA,GAASY,KAE1C6B,MAAK,SAACC,GACLV,EAAS,CAAExE,KAAMJ,EAAkBO,QAAS,CAAED,KAAMgF,EAAIC,WAEzDC,OAAM,SAACC,GACFV,IAAMW,SAASD,IACnBb,EAAS,CAAExE,KAAMJ,EAAeO,QAAS,CAAEC,MAAOiF,QAGtD,IAAME,EAAeZ,IAAMC,YAAYlD,SAiBvC,OAhBAiD,IACGE,IA/CU,kBA+CI,CACbC,YAAaS,EAAaR,MAC1B3B,OAAO,aAAG4B,UAAU,EAAMxC,KAAMA,EAAO,GAAMY,KAE9C6B,MAAK,SAACC,GACLV,EAAS,CACPxE,KAAMJ,EACNO,QAAS,CAAEE,YAAiC,IAApB6E,EAAIC,KAAKK,aAGpCJ,OAAM,SAACC,GACFV,IAAMW,SAASD,IACnBb,EAAS,CAAExE,KAAMJ,EAAeO,QAAS,CAAEC,MAAOiF,QAG/C,WACLX,EAAae,SACbF,EAAaE,YAEd,CAACrC,EAAQZ,IAEL1C,EInEuC4F,CAAYtC,EAAQZ,GAA1DtC,EAJK,EAILA,KAAMD,EAJD,EAICA,QAASG,EAJV,EAIUA,MAAOC,EAJjB,EAIiBA,YAW9B,OACE,kBAACsF,EAAA,EAAD,CAAW/E,UAAU,QACnB,wBAAIA,UAAU,QAAd,UACA,kBAACuC,EAAD,CAAYC,OAAQA,EAAQC,cAZhC,SAA2BgC,GACzB,IAAMO,EAAQP,EAAEQ,OAAO9B,KACjBD,EAAQuB,EAAEQ,OAAO/B,MACvBrB,EAAQ,GACR6B,GAAU,SAACwB,GACT,OAAO,2BAAKA,GAAZ,kBAAyBF,EAAQ9B,UAQjC,kBAACvB,EAAD,CAAeC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,IACzDJ,GAAW,0CACXG,GAAS,oDACTF,EAAK6F,KAAI,SAACxF,GACT,OAAO,kBAACD,EAAD,CAAK0F,IAAKzF,EAAI4D,GAAI5D,IAAKA,OAEhC,kBAACgC,EAAD,CAAeC,KAAMA,EAAMC,QAASA,EAASpC,YAAaA,MC3BhE4F,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.684851ba.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: \"make-request\",\r\n  GET_DATA: \"get-data\",\r\n  ERROR: \"error\",\r\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\r\n};\r\n\r\nconst BASE_URL = \"/positions.json\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return { loading: true, jobs: [] };\r\n    case ACTIONS.GET_DATA:\r\n      return { ...state, loading: false, jobs: action.payload.jobs };\r\n\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        jobs: [],\r\n      };\r\n\r\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n      return { ...state, hasNextPage: action.payload.hasNextPage };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default function useFetchJob(params, page) {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    const cancleToken1 = axios.CancelToken.source();\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancleToken: cancleToken1.token,\r\n        params: { markdown: true, page: page, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n      });\r\n\r\n    const cancleToken2 = axios.CancelToken.source();\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancleToken: cancleToken2.token,\r\n        params: { markdown: true, page: page + 1, ...params },\r\n      })\r\n      .then((res) => {\r\n        dispatch({\r\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\r\n          payload: { hasNextPage: res.data.length !== 0 },\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\r\n      });\r\n\r\n    return () => {\r\n      cancleToken1.cancel();\r\n      cancleToken2.cancel();\r\n    };\r\n  }, [params, page]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nexport default function Job({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -\r\n              <span className=\"text-muted font-weight-light\">\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted mb-2\">\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\">{job.type}</Badge>\r\n            <Badge variant=\"secondary\">{job.location}</Badge>\r\n            <div style={{ wordBreak: \"break-all\" }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"d-none d-md-block\"\r\n            height=\"50\"\r\n            alt={job.company}\r\n            src={job.company_logo}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n            variant=\"primary\"\r\n          >\r\n            {open ? \"Hide Details\" : \"View Details\"}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nexport default function JobPagination({ page, setPage, hasNextPage }) {\r\n  const adjustPage = (amount) => {\r\n    setPage((prePage) => {\r\n      return prePage + amount;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Pagination>\r\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n      {page !== 1 && (\r\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\r\n      )}\r\n      {page > 2 && <Pagination.Ellipsis />}\r\n      {page > 2 && (\r\n        <Pagination.Item onClick={() => adjustPage(-1)}>\r\n          {page - 1}\r\n        </Pagination.Item>\r\n      )}\r\n\r\n      <Pagination.Item active>{page}</Pagination.Item>\r\n      {hasNextPage && (\r\n        <Pagination.Item onClick={() => adjustPage(1)}>\r\n          {page + 1}\r\n        </Pagination.Item>\r\n      )}\r\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n    </Pagination>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nexport default function SearchForm({ params, onParamChange }) {\r\n  return (\r\n    <Form className=\"mb-4\">\r\n      <Form.Row className=\"align-items-end\">\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.description}\r\n            name=\"description\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col}>\r\n          <Form.Label>Location</Form.Label>\r\n          <Form.Control\r\n            onChange={onParamChange}\r\n            value={params.location}\r\n            name=\"location\"\r\n            type=\"text\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group as={Col} xs=\"auto\" className=\"m1-2\">\r\n          <Form.Check\r\n            onChange={onParamChange}\r\n            value={params.full_time}\r\n            name=\"full_time\"\r\n            id=\"full_time\"\r\n            label=\"Only Full Time\"\r\n            type=\"checkbox\"\r\n            className=\"mb-2\"\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport useFetchJob from \"./useFetchJob\";\nimport { Container } from \"react-bootstrap\";\nimport Job from \"./Job\";\nimport JobPagination from \"./JobPagination\";\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n\n  const { jobs, loading, error, hasNextPage } = useFetchJob(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">jobify</h1>\n      <SearchForm params={params} onParamChange={handleParamChange} />\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>loading...</h1>}\n      {error && <h1>Error try refreshing</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />;\n      })}\n      <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}